import java.awt.event.KeyEvent;
import java.util.ArrayList;

import edu.princeton.cs.introcs.StdDraw;

public class Lancement {
	public static int test = 0;//variable qui determine si on joue en multi ou single player
	
	
	public static void lancer() throws InterruptedException{
		Graphe.afficher_menu();
		while(true) {
		if (StdDraw.isKeyPressed(KeyEvent.VK_LEFT)) {
			Graphe.choix_singlePlayer();
			}
		if (StdDraw.isKeyPressed(KeyEvent.VK_RIGHT)) {
			Graphe.choix_multiPlayer();
			}
		StdDraw.show(20);
		if (StdDraw.isKeyPressed(KeyEvent.VK_ENTER)) {
			Thread.sleep(200);
				Phase.tour_multi();//premiere phase du jeu
				Graphe.annonceFinDePhase(Phase.A,Phase.B); //ecran noir qui annonce le vainqueur temporaire
				Phase.phase++;
				int tes = 1;
				while(tes==1) {
					if (StdDraw.isKeyPressed(KeyEvent.VK_ENTER)) { //appuyer sur entr√©e permet de passer a la phase suivante
						Thread.sleep(200);
						InGame.reinitialisation_phase(); //avant de passer a la phase 2, on remet les parametres joueurs initiaux (position du joueur a la plage...)
						Phase.tour_multi(); //phase 2 du jeu
						Graphe.annonceFinDePhase(Phase.A,Phase.B);
						Phase.phase++;
						tes=2;
					}
				}
				while(tes==2) {
					if (StdDraw.isKeyPressed(KeyEvent.VK_ENTER)) {
						Thread.sleep(200);
						InGame.reinitialisation_phase();
						Phase.tour_multi();
						Graphe.annonceFinDeJeu(Phase.A,Phase.B); //annonce le vainqueur final et propose de rejouer ou quitter le jeu
						tes=0;
					}
				}
			}
	}
	}
	
	public static void main(String[] args) throws InterruptedException{
		lancer();
	}
}
